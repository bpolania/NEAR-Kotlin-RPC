name: Build and Test

on:
  push:
    branches: [ '**' ]  # Run on all branches
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build without tests
      run: ./gradlew build -x test
    
    - name: Check environment
      run: |
        echo "Java version:"
        java -version
        echo "Gradle version:"
        ./gradlew --version
        echo "Test classes:"
        find . -name "*Test.class" -type f | wc -l
    
    - name: Run unit tests only
      run: ./gradlew test -DskipIntegrationTests=true --no-daemon
      
    - name: Run integration tests
      run: ./gradlew test --no-daemon
      timeout-minutes: 10
      continue-on-error: true
      env:
        NEAR_TESTNET_RPC_URL: https://white-shy-fire.near-testnet.quiknode.pro/1c9f76d8dab07f1657d6aebc20441c38e81265e5
    
    - name: Generate test report
      run: ./gradlew jacocoRootReport
      if: always()
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/build/reports/tests/
          **/build/test-results/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        files: ./build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}


