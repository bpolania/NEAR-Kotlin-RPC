name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test before publishing
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build project
      run: ./gradlew build -x test
    
    - name: Run all tests
      run: ./gradlew test --no-daemon
      timeout-minutes: 10
      env:
        NEAR_TESTNET_RPC_URL: https://white-shy-fire.near-testnet.quiknode.pro/1c9f76d8dab07f1657d6aebc20441c38e81265e5

  publish:
    needs: test
    runs-on: ubuntu-latest
    name: Publish to Maven Central and GitHub Packages
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for scripts
      run: |
        chmod +x gradlew
        chmod +x scripts/*.sh
    
    - name: Generate code from OpenAPI
      run: ./scripts/generate-from-openapi.sh
    
    - name: Build with generated code
      run: ./gradlew build -x test
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Publish to Maven Local
      run: ./gradlew publishToMavenLocal
    
    - name: Publish to GitHub Packages
      run: ./gradlew publish
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          NEAR Kotlin RPC SDK Release ${{ steps.get_version.outputs.VERSION }}
          
          ## What's Changed
          See [changelog](https://github.com/${{ github.repository }}/compare/...v${{ steps.get_version.outputs.VERSION }})
          
          ## Installation
          Add to your `build.gradle.kts`:
          ```kotlin
          dependencies {
              implementation("io.near:near-jsonrpc-client:${{ steps.get_version.outputs.VERSION }}")
          }
          ```
        draft: false
        prerelease: false